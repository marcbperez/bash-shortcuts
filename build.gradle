defaultTasks "wrapper", "watch", "dependencies", "build", "test"

def aptPackages = ["libspock-java", "pandoc", "node-request", "node-less"]
def path = System.getProperty("user.dir")
def srcDir = "${path}/src"

task wrapper(type: Wrapper) {
  description "Creates the project wrapper."
  gradleVersion = "3.4.1"
}

task watch(type: Exec) {
  description "Watches for changes."
  inputs.dir srcDir
  commandLine "true"

  new ByteArrayOutputStream()
}

task dependencies() {
  description "Installs all dependencies."

  dependsOn {
    tasks.findAll { task ->
      task.name.startsWith("dependencies") && !task.name.equals("dependencies")
    }
  }
}

task dependenciesApt(type: Exec) {
  description "Installs APT dependencies."
  workingDir path
  commandLine "apt-get"
  args = ["install", "-y"] + aptPackages

  new ByteArrayOutputStream()
}

task build() {
  description "Builds the project sources."

  dependsOn {
    tasks.findAll { task ->
      task.name.startsWith("build") && !task.name.equals("build")
    }
  }
}

task test() {
  description "Runs all test cases."

  dependsOn {
    tasks.findAll { task ->
      task.name.startsWith("test") && !task.name.equals("test")
    }
  }
}

fileTree(dir: "${srcDir}/test", include: "**/*.groovy").each { File testFile ->
  def fileName = testFile.getName().split("\\.")[0]
  def taskName = "test${fileName}"

  task "${taskName}"(type: Exec) {
    description "Runs the ${fileName} case."
    workingDir path
    commandLine "groovy"
    args "-cp", "/usr/share/java/spock-core.jar", testFile

    new ByteArrayOutputStream()
  }
}
